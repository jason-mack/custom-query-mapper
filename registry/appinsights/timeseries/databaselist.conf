{
  "inputs": {
    "claimtags": "String"
  },
  outputs: {
    database_uid: "String",
    database_name: "String",
    instance_uid: "String",
    instance_name: "Option[String]",
    host_name: "Option[String]",
    user_connections: "Option[Double]",
    cpu_usage_percent: "Option[Double]",
    memory_usage_kb: "Option[Double]",
    io_total_latency_ms: "Option[Double]",
    io_total_bytes: "Option[Double]",
    transactions: "Option[Double]",
    last_updated_timestamp: "Option[String]"
  },
  param_ordering: ["claimtags"],
  sharding_descriminator: "claimtags",
  database_type: "timeseries",
  database_name: "appinsights",
  description: "lookup databases associated with the provided claimtag",
  query: """
           SELECT MDC.database_uid,
          MDC.database_name,
          MDC.instance_uid,
          MDC.instance_name,
          MDC.host_name,
          MDC.claimtag,
          MssqlDbIoStats.io_total_latency_ms,
          MssqlDbIoStats.io_total_bytes,
          MssqlDbStats.transactions_per_sec_value,
          MssqlInstanceMetrics.cpu_usage_percent,
          MssqlInstanceMetrics.memory_usage_kb,
          MssqlInstanceMetrics.user_connections,
          coalesce(
            MssqlDbStats.database_stats_timestamp,
            MssqlDbIoStats.database_io_diff_timestamp,
            MssqlInstanceMetrics.instance_metrics_timestamp,
            MDC.database_config_timestamp
          ) as timestamp
    FROM
    (
        SELECT database_uid,
             database_name,
             instance_uid,
             instance_name,
             host_name,
             MSDC.claimtag,
             MSDC.timestamp as database_config_timestamp
        FROM "CollectorMetadata" CMD
        JOIN "MSSQLDatabaseConfig" MSDC
          ON CMD.agent_id = MSDC.agent_id AND CMD.dataswamp_file_id = MSDC.dataswamp_file_id AND CMD.claimtag = MSDC.claimtag
        WHERE CMD.collector_type = 'mssql' AND CMD.type = 'config' AND CMD.claimtag IN (${params(claimTags)})
      order by instance_name,database_name
    ) AS MDC
    LEFT JOIN LATERAL
    (
        SELECT ROUND((("io_read_latency_ms" + "io_write_latency_ms")/NULLIF("io_reads" + "io_writes", 0)) :: NUMERIC, 2) AS io_total_latency_ms,
               ROUND(((io_read_bytes + io_write_bytes)) :: NUMERIC, 2) as io_total_bytes,
               time_bucket as database_io_diff_timestamp
        FROM "MSSQLDatabaseIODiffStats" MDIS
        WHERE MDC.database_uid = MDIS.database_uid AND MDC.claimtag = MDIS.claimtag
        AND MDIS.time_bucket > unix_now() - $DB_LIST_DAYS_LIMIT_IN_MILLISECONDS
        ORDER BY MDIS.time_bucket DESC LIMIT 1
    ) AS MssqlDbIoStats ON true
    LEFT JOIN LATERAL
    (
        SELECT  ROUND(transactions_per_sec_value::NUMERIC,2) as transactions_per_sec_value,
                timestamp as database_stats_timestamp
        FROM "MSSQLDatabaseStats" MDM
        WHERE MDM.database_uid = MDC.database_uid AND MDM.claimtag = MDC.claimtag
        AND MDM.timestamp > unix_now() - $DB_LIST_DAYS_LIMIT_IN_MILLISECONDS
        ORDER BY MDM.timestamp DESC LIMIT 1
    ) AS MssqlDbStats ON true
    LEFT JOIN LATERAL
    (
        SELECT ROUND(resourcepool_cpu_usage_percent_value ::NUMERIC, 2) as cpu_usage_percent,
               memorymanager_total_server_memory_kb_value as memory_usage_kb,
               generalstats_user_connections_value as user_connections,
               timestamp as instance_metrics_timestamp
        FROM "MSSQLInstanceMetrics" MIM
        WHERE MIM.instance_uid = MDC.instance_uid AND MIM.claimtag = MDC.claimtag
        AND MIM.timestamp > unix_now() - $DB_LIST_DAYS_LIMIT_IN_MILLISECONDS
        ORDER BY MIM.timestamp DESC LIMIT 1
    ) AS MssqlInstanceMetrics ON true;
  """
}
